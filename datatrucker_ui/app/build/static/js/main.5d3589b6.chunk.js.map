{"version":3,"sources":["components/middleware/Copyright.js","components/middleware/ResponseDialog.js","components/views/main/login/login.js","components/views/main/login/register.js","components/views/main/pages/Editable.js","components/views/main/pages/formbox.js","components/views/main/pages/DocuLink.js","components/views/main/pages/index.js","components/views/main/landing/Landing.js","components/views/main/MainRouter.js","components/views/main/HeaderSidebarFooter.js","components/views/main/Main.js","App.js","serviceWorker.js","index.js"],"names":["copyright","Typography","variant","color","align","Link","Date","getFullYear","DialogContent","withStyles","theme","root","padding","spacing","MuiDialogContent","DialogActions","margin","MuiDialogActions","ResponseDialog","flatten","obj","path","Object","keys","reduce","output","key","Array","replace","Dialog","onClose","this","handleClose","open","props","openModal","dividers","entries","message","map","name","value","nameCapitalized","charAt","toUpperCase","slice","Fragment","toString","Chip","size","label","style","backgroundColor","Button","autoFocus","onClick","markComplete","Component","Login","state","username","password","tenant","auth","ModelMessage","passwordfailed","tenants","redirect","redirectreg","formChange","event","setState","target","loginTypes","login","e","preventDefault","apiUrl","fetch","method","body","JSON","stringify","browser","headers","then","response","json","data","status","history","push","reqCompleted","isIntialized","tenantlist","val","tenantname","classes","to","Container","component","maxWidth","CssBaseline","className","paper","Avatar","avatar","form","noValidate","onSubmit","TextField","required","fullWidth","id","onChange","helperText","type","select","SelectProps","native","option","submit","Box","mt","marginTop","display","flexDirection","alignItems","palette","secondary","main","width","Register","execute","confirmpassword","createUser","autoComplete","Grid","container","item","xs","href","Editable","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","tabledata","refreshtabledata","definition","searchapi","apiSearchUrl","responseSearch","dataSearch","searchcolumns","prevProps","BuildData","icons","title","formbox","formfields","LoadId","trackUpdateID","eventval","newField","newState","assign","formrenderer","field","placeholder","disabled","locked","multiline","drowdownOptions","values","forEach","element","labelVal","runCreatAPI","runUpdateAPI","runDeleteAPI","runGetAPI","createForm","formfield","defaultValue","trackUpdateIDChange","updateForm","length","console","log","MSG","msg","doNothing","Formrenderer","Card","CardContent","bgcolor","searchid","buttonCreate","gutterBottom","updateid","update","deleteid","CardActions","minWidth","paddingLeft","bullet","transform","fontSize","pos","marginBottom","paddingTop","paddingRight","paddingBottom","DocuLink","link","rel","float","index","renderTable","annotations","responseValidate","dataValidate","match","pl","pb","render","Landing","isRegisterd","isLoggedin","barData","radarData","loginscounts","usercounts","api","apicounts","bardata","radar","checkLogin","updateJobStats","updateAuditStats","updateAuditLogs","lg","md","sm","chart","ResponsiveContainer","aspect","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","stroke","fillOpacity","minHeight","withTheme","MainRouter","exact","Pages","iconlist","PersonIcon","GroupIcon","AccountTreeIcon","StorageRoundedIcon","OpenInBrowserRoundedIcon","VpnKeyRoundedIcon","FileCopyRoundedIcon","CloudCircleOutlinedIcon","EmojiObjectsOutlinedIcon","DeveloperModeOutlinedIcon","AllInclusiveOutlinedIcon","drawerWidth","useStyles","makeStyles","bottomAppBar","textAlign","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","height","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","button","card","nested","HeaderSidebarFooter","useTheme","React","useState","setOpen","Users","expandPanel","setExpandPanel","OPTIONS","ico","RunAccess","panelData","setPanelData","handleDrawerOpen","expandablePanels","Panels","populatePanel","AppBar","position","clsx","Toolbar","IconButton","edge","noWrap","Drawer","primary","newExapndPanel","direction","Divider","List","IcoComponent","ListItem","handleClick","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","disablePadding","keyinner","valueinner","Main","createTheme","light","dark","contrastText","App","ThemeProvider","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.5d3589b6.chunk.js","sourcesContent":["/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function copyright() {\n      return (\n            <div>\n                  <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                        {'Copyright © '}\n                        <Link color=\"inherit\" >\n                              DataTrucker.IO\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                  </Typography>\n            </div>\n      );\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport Chip from '@material-ui/core/Chip';\n\nconst DialogContent = withStyles((theme) => ({\n      root: {\n            padding: theme.spacing(2)\n      }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n      root: {\n            margin: 0,\n            padding: theme.spacing(1)\n      }\n}))(MuiDialogActions);\n\nclass ResponseDialog extends Component {\n      flatten = (obj, path = '') => {\n            if (!(obj instanceof Object)) return {[path.replace(/\\.$/g, '')]: obj};\n\n            return Object.keys(obj).reduce((output, key) => {\n                  return obj instanceof Array ? {...output, ...this.flatten(obj[key], path + '[' + key + '].')} : {...output, ...this.flatten(obj[key], path + key + '.')};\n            }, {});\n      };\n\n      render() {\n            return (\n                  <div>\n                        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.props.openModal}>\n                              <DialogContent dividers>\n                                    {Object.entries(this.flatten(this.props.message)).map(([name, value]) => {\n                                          const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1);\n                                          return (\n                                                <React.Fragment key={nameCapitalized}>\n                                                      {nameCapitalized === 'ReqCompleted' && value.toString() === 'true' && <Chip size=\"small\" label=\"Request Completed\" color=\"primary\" />}\n                                                      {nameCapitalized === 'ReqCompleted' && value.toString() === 'false' && <Chip size=\"small\" label=\"Request Failed\" style={{backgroundColor: '#E26D5A'}} />}\n                                                      {nameCapitalized !== 'ReqCompleted' && (\n                                                            <pre key={nameCapitalized}>\n                                                                  {nameCapitalized}: {value.toString()}\n                                                            </pre>\n                                                      )}\n                                                </React.Fragment>\n                                          );                                         \n                                    })}\n                              </DialogContent>\n                              <DialogActions>\n                                    <Button autoFocus onClick={this.props.markComplete} color=\"primary\">\n                                          Close\n                                    </Button>\n                              </DialogActions>\n                        </Dialog>\n                  </div>\n            );\n      }\n}\n\nexport default ResponseDialog;\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\n\nimport React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {withStyles} from '@material-ui/core/styles';\n\n//import middleware\nimport Copyright from '../../../middleware/Copyright';\nimport AlertDialog from '../../../middleware/ResponseDialog';\n\nconst useStyles = (theme) => ({\n      paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n      },\n      avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main\n      },\n      form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(1)\n      },\n      submit: {\n            margin: theme.spacing(3, 0, 2)\n      }\n});\n\nclass Login extends Component {\n      state = {\n            username: '',\n            password: '',\n            tenant: '',\n            auth: 'local',\n            openModal: false,\n            ModelMessage: {},\n            passwordfailed: false,\n            tenants: [],\n            redirect: false,\n            redirectreg: false\n      };\n\n      componentDidMount() {\n            const logoutURL = '/api/v1/logout';\n            fetch(logoutURL, {\n                  method: 'GET',\n                  headers: {\n                        'Content-Type': 'application/json'\n                  }\n            })\n                  .then((response) => response.json())\n                  .then((data) => {});\n\n            const isRegUrl = '/api/v1/statuschecks/is-intialized';\n            fetch(isRegUrl, {\n                  method: 'GET',\n                  headers: {\n                        'Content-Type': 'application/json'\n                  }\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        if (data.reqCompleted) {\n                              if (!data.data.isIntialized) {\n                                    this.setState({redirectreg: true});\n                              }\n                        } else {\n                              this.setState({redirectreg: true});\n                        }\n                  });\n            const apiUrl = '/api/v1/groups/tenants';\n            fetch(apiUrl, {\n                  method: 'GET',\n                  headers: {\n                        'Content-Type': 'application/json'\n                  }\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        if (data.reqCompleted) {\n                              var tenantlist = [];\n\n                              for (const val in data.data) {\n                                    var tenant = {\n                                          value: data.data[val].tenantname,\n                                          label: data.data[val].tenantname\n                                    };\n                                    tenantlist.push(tenant);\n                              }\n                              this.setState({tenants: tenantlist});\n                              this.setState({tenant: 'Admin'});\n                        } else {\n                              this.setState({openModal: true, ModelMessage: data});\n                        }\n                  });\n      }\n\n      formChange = (event) => this.setState({[event.target.name]: event.target.value});\n      markComplete = (message) => this.setState({openModal: false});\n\n      loginTypes = [\n            {\n                  value: 'local',\n                  label: 'Local Auth'\n            },\n            {\n                  value: 'keycloak',\n                  label: 'Keycloak Auth'\n            }\n      ];\n\n      login = (e) => {\n            e.preventDefault();\n            var apiUrl =  this.state.auth===\"local\" ? '/api/v1/login' : ('/api/v1/login-'+this.state.auth)\n            fetch(apiUrl, {\n                  method: 'POST',\n                  body: JSON.stringify({\n                        username: this.state.username,\n                        password: this.state.password,\n                        tenant: this.state.tenant,\n                        browser: true\n                  }),\n                  headers: {\n                        'Content-Type': 'application/json'\n                  }\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        if (data.status) {\n                              this.setState({redirect: true});\n                              this.props.history.push('/home')\n                        } else {\n                              this.setState({openModal: true, ModelMessage: data});\n                        }\n                        if (typeof data.status === 'undefined') {\n                              this.setState({openModal: true, ModelMessage: data});\n                        }\n                  });\n      };\n\n      render() {\n            const {classes} = this.props;\n            if (this.state.redirectreg) {\n                  return <Redirect to=\"/register\" />;\n            }\n            if (this.state.redirect) {\n                 return <Redirect to=\"/home\" />;\n            } \n            else {\n                  return (\n                        <Container component=\"main\" maxWidth=\"xs\">\n                              <CssBaseline />\n                              <div className={classes.paper}>\n                                    <Avatar className={classes.avatar}>\n                                          <LockOutlinedIcon />\n                                    </Avatar>\n                                    <Typography component=\"h1\" variant=\"h5\">\n                                          Login\n                                    </Typography>\n                                    <form className={classes.form} noValidate onSubmit={this.login}>\n                                          <TextField\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                id=\"username\"\n                                                label=\"Username\"\n                                                variant=\"outlined\"\n                                                name=\"username\"\n                                                autoFocus\n                                                value={this.state.username}\n                                                onChange={this.formChange}\n                                                helperText=\"Please type in your username\"\n                                          />\n                                          <TextField\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                name=\"password\"\n                                                label=\"Password\"\n                                                variant=\"outlined\"\n                                                type=\"password\"\n                                                id=\"password\"\n                                                value={this.state.password}\n                                                onChange={this.formChange}\n                                                helperText=\"Please type in your password\"\n                                          />\n                                          <TextField\n                                                select\n                                                required\n                                                fullWidth\n                                                name=\"tenant\"\n                                                label=\"Tenant\"\n                                                variant=\"outlined\"\n                                                value={this.state.tenant}\n                                                SelectProps={{\n                                                      native: true\n                                                }}\n                                                helperText=\"Please select your tenant\"\n                                                id=\"tenant\"\n                                                onChange={this.formChange}\n                                          >\n                                                {this.state.tenants.map((option) => (\n                                                      <option key={option.value} value={option.value}>\n                                                            {option.label}\n                                                      </option>\n                                                ))}\n                                          </TextField>\n                                          <TextField\n                                                select\n                                                required\n                                                fullWidth\n                                                name=\"auth\"\n                                                label=\"auth\"\n                                                variant=\"outlined\"\n                                                SelectProps={{\n                                                      native: true\n                                                }}\n                                                value={this.state.auth}\n                                                onChange={this.formChange}\n                                                helperText=\"Please select your Authentication mechanism\"\n                                                id=\"auth\"\n                                          >\n                                                {this.loginTypes.map((option) => (\n                                                      <option key={option.value} value={option.value}>\n                                                            {option.label}\n                                                      </option>\n                                                ))}\n                                          </TextField>\n                                          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                                                Login\n                                          </Button>\n                                    </form>\n                              </div>\n                              <Box mt={8}>\n                                    <Copyright />\n                              </Box>\n                              <AlertDialog openModal={this.state.openModal} message={this.state.ModelMessage} markComplete={this.markComplete} />\n                        </Container>\n                  );\n            }\n      }\n}\n\nexport default withStyles(useStyles)(Login);\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {withStyles} from '@material-ui/core/styles';\n\n//import middleware\nimport Copyright from '../../../middleware/Copyright';\nimport AlertDialog from '../../../middleware/ResponseDialog';\n\nconst useStyles = (theme) => ({\n      paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n      },\n      avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main\n      },\n      form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(1)\n      },\n      submit: {\n            margin: theme.spacing(3, 0, 2)\n      }\n});\n\nclass Register extends Component {\n      state = {\n            execute: false,\n            username: '',\n            password: '',\n            confirmpassword: '',\n            openModal: false,\n            ModelMessage: {},\n            redirect: false\n      };\n\n      componentDidMount() {\n            const apiUrl = '/api/v1/statuschecks/is-intialized';\n            fetch(apiUrl)\n                  .then((response) => response.json())\n                  .then((data) => {\n                        if (!data.status) {\n                              this.setState({execute: true});\n                        } else {\n                              this.setState({redirect: true});\n                        }\n                  });\n      }\n\n      createUser = (e) => {\n            e.preventDefault();\n            const apiUrl = '/api/v1/statuschecks/intialize';\n            if (this.state.password === this.state.confirmpassword) {\n                  fetch(apiUrl, {\n                        method: 'POST',\n                        body: JSON.stringify({\n                              username: this.state.username,\n                              password: this.state.password\n                        }),\n                        headers: {\n                              'Content-Type': 'application/json'\n                        }\n                  })\n                        .then((response) => response.json())\n                        .then((data) => {\n                              if (data.reqCompleted) {\n                                    this.setState({redirect: true});\n                              } else {\n                                    this.setState({openModal: true, ModelMessage: data});\n                              }\n                        });\n            } else {\n                  this.setState({openModal: true, ModelMessage: 'Passwords dont match'}); \n            }\n      };\n\n      formChange = (event) => this.setState({[event.target.name]: event.target.value});\n\n      markComplete = (message) => this.setState({openModal: false});\n\n      render() {\n            const {classes} = this.props;\n            if (this.state.redirect) {\n                  return <Redirect to=\"/login\" />;\n            } else if (!this.state.execute) {\n                  return <h6>...verifying server setup with backend</h6>;\n            } else {\n                  return (\n                        <Container component=\"main\" maxWidth=\"xs\">\n                              <CssBaseline />\n                              <div className={classes.paper}>\n                                    <Avatar className={classes.avatar}>\n                                          <SupervisorAccountIcon />\n                                    </Avatar>\n                                    <Typography component=\"h1\" variant=\"h5\">\n                                          Create a Admin User\n                                    </Typography>\n                                    <form className={classes.form} noValidate onSubmit={this.createUser}>\n                                          <TextField margin=\"normal\" required fullWidth id=\"username\" label=\"Username\" name=\"username\" value={this.state.username} onChange={this.formChange} />\n                                          <TextField margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"password\" value={this.state.password} onChange={this.formChange} />\n                                          <TextField\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                name=\"confirmpassword\"\n                                                label=\"Confirm Password\"\n                                                type=\"password\"\n                                                id=\"confirmpassword\"\n                                                autoComplete=\"confirmpassword\"\n                                                value={this.state.confirmpassword}\n                                                onChange={this.formChange}\n                                          />\n                                          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                                                Create Admin User\n                                          </Button>\n                                          <Grid container>\n                                                <Grid item xs>\n                                                      <Link href=\"#\" variant=\"body2\">\n                                                            Documentation\n                                                      </Link>\n                                                </Grid>\n                                          </Grid>\n                                    </form>\n                              </div>\n                              <Box mt={8}>\n                                    <Copyright />\n                              </Box>\n                              <AlertDialog openModal={this.state.openModal} message={this.state.ModelMessage} markComplete={this.markComplete} />\n                        </Container>\n                  );\n            }\n      }\n}\n\nexport default withStyles(useStyles)(Register);\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {forwardRef, Component} from 'react';\nimport MaterialTable from 'material-table';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nexport default class Editable extends Component {\n      tableIcons = {\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n      };\n\n      state = {\n            columns: [],\n            tabledata: [],\n            refreshtabledata: true\n      };\n      \n\n      BuildData() {\n            if (typeof this.props.definition.searchapi !== 'undefined') {\n                  const apiSearchUrl = '/api/v1/' + this.props.definition.searchapi;\n                  fetch(apiSearchUrl)\n                        .then((responseSearch) => responseSearch.json())\n                        .then((dataSearch) => {\n                              this.setState({tabledata: dataSearch.data, columns: this.props.definition.searchcolumns, refreshtabledata: false});\n                        });\n            }\n      }\n\n      componentDidUpdate(prevProps) {\n            if (this.state.refreshtabledata) {\n                  this.BuildData();\n            }\n      }\n\n      render() {\n            if (typeof this.props.definition.searchapi !== 'undefined') {\n                  return (\n                        <React.Fragment>\n                              <MaterialTable icons={this.tableIcons} title={this.props.definition['trucker-page-searchtableheading']} columns={this.state.columns} data={this.state.tabledata} />\n                        </React.Fragment>\n                  );\n            } else {\n                  return <div></div>;\n            }\n      }\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AlertDialog from '../../../middleware/ResponseDialog';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = (theme) => ({\n      root: {\n            minWidth: 275,\n            paddingLeft: '10px'\n      },\n      bullet: {\n            display: 'inline-block',\n            margin: '0 2px',\n            transform: 'scale(0.8)'\n      },\n      title: {\n            fontSize: 14\n      },\n      pos: {\n            marginBottom: 12\n      },\n      field: {\n            paddingTop: '10px',\n            paddingLeft: '10px',\n            paddingRight: '10px'\n      },\n      buttonCreate: {\n            marginTop: '20px'\n      },\n      form: {\n            paddingBottom: '15px'\n      }\n});\n\nclass formbox extends Component {\n      state = {\n            formfields: {},\n            openModal: false,\n            ModelMessage: {},\n            LoadId: '-1',\n            trackUpdateID: ''\n      };\n\n      formChange = (event) => {\n            var eventval = typeof event.target.value === 'object' ? JSON.stringify(event.target.value, null, 2) : event.target.value;\n            var newField = {[event.target.name]: eventval};\n            var newState = Object.assign(this.state.formfields, newField);\n            this.setState({formfields: newState});\n      };\n\n      formrenderer = (value) => {\n            const {classes} = this.props;\n            if (value.value.type === 'text') {\n                  return (\n                        <Grid item xs={6} className={classes.field}>\n                              <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    type=\"text\"\n                                    id={value.value.field}\n                                    value={this.state.formfields[value.value.field] || ''}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                              />\n                        </Grid>\n                  );\n            } else if (value.value.type === 'password') {\n                  return (\n                        <Grid item xs={6} className={classes.field}>\n                              <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    type=\"password\"\n                                    id={value.value.field}\n                                    value={this.state.formfields[value.value.field] || ''}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                              />\n                        </Grid>\n                  );\n            } else if (value.value.type === 'integer') {\n                  return (\n                        <Grid item xs={6} className={classes.field}>\n                              <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    type=\"number\"\n                                    id={value.value.field}\n                                    value={this.state.formfields[value.value.field] || ''}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                              />\n                        </Grid>\n                  );\n            } else if (value.value.type === 'textarea') {\n                  return (\n                        <Grid item xs={12} className={classes.field}>\n                              <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    type=\"textarea\"\n                                    multiline={true}\n                                    id={value.value.field}\n                                    value={this.state.formfields[value.value.field] || ''}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                              />\n                        </Grid>\n                  );\n            } else if (value.value.type === 'jsonarea') {\n                  return (\n                        <Grid item xs={12} className={classes.field}>\n                              <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    type=\"textarea\"\n                                    multiline={true}\n                                    id={value.value.field}\n                                    value={this.state.formfields[value.value.field] || '{}'}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                              />\n                        </Grid>\n                  );\n            } else if (value.value.type === 'dropdown') {\n                  var drowdownOptions = [];\n                  value.value.values.forEach((element) => {\n                        drowdownOptions.push({value: element, label: element});\n                  });\n                  return (\n                        <Grid item xs={6} className={classes.field}>\n                              <TextField\n                                    select\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    id={value.value.field}\n                                    value={this.state.formfields[value.value.field] || ''}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                                    SelectProps={{\n                                          native: true\n                                    }}\n                              >\n                                    {drowdownOptions.map((option) => (\n                                          <option key={option.value} value={option.value}>\n                                                {option.label}\n                                          </option>\n                                    ))}\n                              </TextField>\n                        </Grid>\n                  );\n            } else if (value.value.type === 'boolean') {\n                  const booleanOptions = [\n                        {\n                              value: true,\n                              label: 'True'\n                        },\n                        {\n                              value: false,\n                              label: 'False'\n                        }\n                  ];\n                  var labelVal = this.state.formfields[value.value.field];\n                  if (typeof this.state.formfields[value.value.field] !== 'string') {\n                        labelVal = this.state.formfields[value.value.field] ? 'true' : 'false';\n                  }\n\n                  return (\n                        <Grid item xs={6} className={classes.field}>\n                              <TextField\n                                    select\n                                    fullWidth\n                                    name={value.value.field}\n                                    label={value.value.placeholder}\n                                    id={value.value.field}\n                                    value={labelVal || ''}\n                                    onChange={this.formChange}\n                                    disabled={value.value.locked}\n                                    SelectProps={{\n                                          native: true\n                                    }}\n                              >\n                                    {booleanOptions.map((option) => (\n                                          <option key={option.value} value={option.value}>\n                                                {option.label}\n                                          </option>\n                                    ))}\n                              </TextField>\n                        </Grid>\n                  );\n            } else {\n                  return <div></div>;\n            }\n      };\n\n      runCreatAPI = (e) => {\n            e.preventDefault();\n            const apiUrl = '/api/v1/' + this.props.definition['createapi'];\n            fetch(apiUrl, {\n                  method: 'POST',\n                  body: JSON.stringify(this.state.formfields),\n                  headers: {\n                        'Content-Type': 'application/json'\n                  }\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({openModal: true, ModelMessage: data});\n                  });\n      };\n\n      runUpdateAPI = (e) => {\n            e.preventDefault();\n            const apiUrl = '/api/v1/' + this.props.definition['updateapi'] + '/' + this.state.LoadId;\n            fetch(apiUrl, {\n                  method: 'PUT',\n                  body: JSON.stringify(this.state.formfields),\n                  headers: {\n                        'Content-Type': 'application/json'\n                  }\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({openModal: true, ModelMessage: data});\n                  });\n      };\n\n      runDeleteAPI = (e) => {\n            e.preventDefault();\n            const apiUrl = '/api/v1/' + this.props.definition['deleteapi'] + '/' + this.state.trackUpdateID;\n            fetch(apiUrl, {\n                  method: 'DELETE'\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({openModal: true, ModelMessage: data});\n                  });\n      };\n\n      runGetAPI = (e) => {\n            e.preventDefault();\n            const apiUrl = '/api/v1/' + this.props.definition['getapi'] + '/' + this.state.trackUpdateID;\n            fetch(apiUrl, {\n                  method: 'GET'\n            })\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({openModal: true, ModelMessage: data});\n                  });\n      };\n\n\n      markComplete = (message) => this.setState({openModal: false});\n\n      createForm = () => {\n            var newState = {};\n            Object.entries(this.state.formfields).forEach(([name, value]) => {\n                  newState[name] = null;\n            });\n\n            this.setState({LoadId: '0', trackUpdateID: '', formfields: newState});\n            this.props.definition['create'].forEach((formfield) => {\n                  if (typeof formfield.defaultValue !== 'undefined') {\n                        var newField = {[formfield.field]: typeof formfield.defaultValue === 'object' ? JSON.stringify(formfield.defaultValue, null, 12) : formfield.defaultValue};\n                        newState = Object.assign(newState, newField);\n                  }\n            });\n            this.setState({formfields: newState});\n      };\n\n      trackUpdateIDChange = (event) => this.setState({trackUpdateID: event.target.value});\n\n      updateForm = () => {\n            if (this.state.trackUpdateID.length > 1) {\n                  const apiUrl = '/api/v1/' + this.props.definition['searchapi'] + this.props.definition['searchid'] + '=' + this.state.trackUpdateID;\n                  fetch(apiUrl, {\n                        method: 'GET',\n                        headers: {\n                              'Content-Type': 'application/json'\n                        }\n                  })\n                        .then((response) => response.json())\n                        .then((data) => {\n                              console.log(data);\n                              if (data.reqCompleted && data.data.length === 0) {\n                                    this.setState({openModal: true, ModelMessage: {MSG: 'No data found for request'}});\n                              } else if (data.reqCompleted && data.data.length === 1) {\n                                    this.setState({formfields: data.data[0], LoadId: this.state.trackUpdateID});\n                              } else if (data.reqCompleted && data.data.length > 1) {\n                                    this.setState({openModal: true, ModelMessage: {MSG: 'Too many possible matches to the request'}});\n                              } else {\n                                    this.setState({openModal: true, ModelMessage: data});\n                              }\n                        });\n            } else {\n                  this.setState({openModal: true, ModelMessage: {msg: 'Search Field should be a minimum length of 1'}});\n            }\n      };\n\n      doNothing = (e) => {\n            e.preventDefault();\n      };\n\n      render() {\n            const {classes} = this.props;\n            const Formrenderer = this.formrenderer;\n             if ((typeof this.props.definition['createapi'] !== 'undefined')   ) {\n                  return (\n                        <div>\n                              <form className={classes.form} noValidate onSubmit={this.doNothing}>\n                                    <Card className={classes.root} variant=\"outlined\">\n                                          <CardContent>\n                                                <Box bgcolor=\"background.paper\">\n                                                      <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={this.createForm}>\n                                                            Create {this.props.definition.searchid}\n                                                      </Button>\n                                                </Box>\n                                                {/* This is update form  trigger for field creation*/}\n                                                {(typeof this.props.definition['updateapi'] !== 'undefined' || typeof this.props.definition['deleteapi'] !== 'undefined') && (\n                                                      <React.Fragment>\n                                                            <Box bgcolor=\"background.paper\" className={classes.buttonCreate}>\n                                                                  <Typography variant=\"subtitle1\" gutterBottom>\n                                                                        - OR -{' '}\n                                                                  </Typography>\n                                                            </Box>\n                                                            <TextField\n                                                                  size=\"small\"\n                                                                  name={'trackUpdateID'}\n                                                                  label={this.props.definition.updateid}\n                                                                  type=\"text\"\n                                                                  id={'trackUpdateID'}\n                                                                  value={this.state.trackUpdateID || ''}\n                                                                  onChange={this.trackUpdateIDChange}\n                                                                  helperText={'Please enter the ' + (typeof this.props.definition.update !== 'undefined' ? this.props.definition.updateid : this.props.definition.deleteid) + ' to '+(typeof this.props.definition.update !== 'undefined' ? 'load /' : this.props.definition.deleteid)+' delete'}\n                                                            />\n                                                      </React.Fragment>\n                                                )}\n                                          </CardContent>\n                                          \n                                          <CardActions>\n                                          {/* This is update form  trigger*/}\n                                          {typeof this.props.definition['updateapi'] !== 'undefined' && (\n                                                      <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={this.updateForm}>\n                                                            Load {this.props.definition.updateid} Update Form\n                                                      </Button>\n                                          )}\n                                          {typeof this.props.definition['getapi'] !== 'undefined' && (\n                                                      <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={this.runGetAPI}>\n                                                            Get\n                                                      </Button>\n                                          )}    \n                                          {typeof this.props.definition['deleteapi'] !== 'undefined' && (\n                                                      <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick={this.runDeleteAPI}>\n                                                            Delete\n                                                      </Button>\n                                          )}                                      \n                                          </CardActions>\n                                    </Card>\n                              </form>\n\n                              {/* This is create form */}\n                              {this.state.LoadId === '0' && (\n                                    <form className={classes.form} noValidate onSubmit={this.runCreatAPI}>\n                                          <Card className={classes.root} variant=\"outlined\">\n                                                <CardContent>\n                                                      <Box bgcolor=\"background.paper\">\n                                                            <Typography variant=\"h6\" gutterBottom>\n                                                                  Create Form\n                                                            </Typography>\n                                                      </Box>\n                                                      <Grid container className={classes.root}>\n                                                            {/* This is create field interator form */}\n                                                            {this.props.definition['create'].map((value) => {\n                                                                  return <Formrenderer value={value} key={value.field} />;\n                                                            })}\n                                                      </Grid>\n                                                </CardContent>\n                                                <CardActions>\n                                                      <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\">\n                                                            Create\n                                                      </Button>\n                                                </CardActions>\n                                          </Card>\n                                    </form>\n                              )}\n\n                              {/* This is update form */}\n                              {this.state.LoadId !== '0' && this.state.LoadId !== '-1' && (\n                                    <form className={classes.form} noValidate>\n                                          <Card className={classes.root} variant=\"outlined\">\n                                                <CardContent>\n                                                      <Box bgcolor=\"background.paper\">\n                                                            <Typography variant=\"h6\" gutterBottom>\n                                                                  Update Form\n                                                            </Typography>\n                                                      </Box>\n                                                      <Grid container className={classes.root}>\n                                                            {/* This is update field interator form */}\n                                                            {this.props.definition['update'].map((value) => {\n                                                                  return <Formrenderer value={value} key={value.field} />;\n                                                            })}\n                                                      </Grid>\n                                                </CardContent>\n                                                <CardActions>\n                                                      <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={this.runUpdateAPI}>\n                                                            Update\n                                                      </Button>\n                                                </CardActions>\n                                          </Card>\n                                    </form>\n                              )}\n                              <AlertDialog openModal={this.state.openModal} message={this.state.ModelMessage} markComplete={this.markComplete} />\n                        </div>\n                  );\n            } else {\n                  return <div></div>;\n            }\n      }\n}\n\nexport default withStyles(useStyles)(formbox);\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = (theme) => ({\n      root: {\n            float: 'right'\n      }\n});\n\nclass DocuLink extends Component {\n      render() {\n            const {classes} = this.props;\n            if (typeof this.props.link != 'undefined') {\n                  return (\n                        <Typography className={classes.root} align=\"right\" variant=\"subtitle1\" gutterBottom>\n                              <Link rel=\"noopener\" target=\"_blank\" href={this.props.link}>\n                                    Documentation Link\n                              </Link>\n                        </Typography>\n                  );\n            } else {\n                  return <div></div>;\n            }\n      }\n}\n\nexport default withStyles(useStyles)(DocuLink);\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\n\nimport React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from './Editable';\nimport FormBox from './formbox';\nimport Copyright from '../../../middleware/Copyright';\nimport DocuLink from './DocuLink';\n\nexport default class index extends Component {\n      state = {\n            definition: {},\n            renderTable: false,\n            annotations: {},\n            redirect: false\n      };\n\n      componentDidMount() {\n            const apiUrlValidate = '/api/v1/validate';\n            fetch(apiUrlValidate)\n                  .then((responseValidate) => responseValidate.json())\n                  .then((dataValidate) => {\n                        if (!dataValidate.reqCompleted) {\n                              this.setState({redirect: true});\n                        }\n                  });\n            const apiUrl = '/api/v1/ui/resource-definitions?module=' + this.props.match.path;\n            fetch(apiUrl)\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({definition: data});\n                  });\n      }\n\n      render() {\n            if (!this.state.redirect) {\n                  return (\n                        <div>\n                              <Grid container spacing={3}>\n                                    <Grid item xs={6}>\n                                          <Box pl={1} pb={1} bgcolor=\"background.paper\">\n                                                <Typography variant=\"h4\" gutterBottom>\n                                                      {this.state.definition['trucker-page-title']}\n                                                </Typography>\n                                          </Box>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                          <DocuLink link={this.state.definition['DocuLink']} />\n                                    </Grid>\n                              </Grid>\n\n                              {this.state.definition['searchapi'] && (\n                                    <Box pl={1} pb={5} bgcolor=\"background.paper\">\n                                          <Typography variant=\"h6\" gutterBottom>\n                                                {this.state.definition['trucker-page-info']}\n                                          </Typography>\n                                          <Table render={this.props.match.path} definition={this.state.definition} />\n                                    </Box>\n                              )}\n                              {this.state.definition['createapi'] && (  process.env.REACT_APP_API_EDIT === true || this.state.definition['resource'] === false ) && (\n                                    <Box pl={1} bgcolor=\"background.paper\">\n                                          <Typography variant=\"h6\" gutterBottom>\n                                                {this.state.definition['trucker-page-createtableheading']}\n                                          </Typography>\n                                          <FormBox render={this.props.match.path} definition={this.state.definition} />\n                                    </Box>\n                              )}\n                              <Box mt={8}>\n                                    <Copyright />\n                              </Box>\n                        </div>\n                  );\n            } else {\n                  return <Redirect to=\"/login\" />;\n            }\n      }\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {forwardRef, Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport MaterialTable from 'material-table';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer} from 'recharts';\n\nimport {Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis} from 'recharts';\n\nconst useStyles = (theme) => ({\n      api: {\n            minWidth: 200\n      },\n      chart: {\n            minWidth: 200,\n            minHeight: 450\n      },\n      title: {\n            fontSize: 14\n      }\n});\n\nclass Landing extends Component {\n      tableIcons = {\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n      };\n\n      state = {\n            isRegisterd: true,\n            isLoggedin: true,\n            columns: [\n                  {title: 'Tenant', field: 'Tenant'},\n                  {title: 'User', field: 'User'},\n                  {title: 'API', field: 'API'},\n                  {title: 'From', field: 'From'},\n                  {title: 'Message', field: 'Message'},\n                  {title: 'Method', field: 'Method'},\n                  {title: 'Session', field: 'Session'},\n                  {title: 'SuccessCode', field: 'SuccessCode'},\n                  {title: 'Time', field: 'time'},\n                  {title: 'RequestID', field: 'RequestID'}\n            ],\n            tabledata: [],\n            barData: [],\n            radarData: [],\n            loginscounts: 0,\n            usercounts: 0,\n            api: 0,\n            apicounts: 0\n      };\n\n      updateJobStats() {\n            const apiUrl = '/api/v1/ui/jobdata';\n            fetch(apiUrl)\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({barData: data.bardata, radarData: data.radar});\n                  });\n      }\n\n      updateAuditStats() {\n            const apiUrl = '/api/v1/ui/userdata';\n            fetch(apiUrl)\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({\n                              loginscounts: data.loginscounts || '0',\n                              usercounts: data.usercounts || '0',\n                              api: data.api || '0',\n                              apicounts: data.apicounts || '0'\n                        });\n                  });\n      }\n\n      updateAuditLogs() {\n            const apiUrl = '/api/v1/ui/auditlogs';\n            fetch(apiUrl)\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({tabledata: data});\n                  });\n      }\n\n      checkLogin() {\n            const apiUrl = '/api/v1/validate';\n            fetch(apiUrl)\n                  .then((response) => response.json())\n                  .then((data) => {\n                        this.setState({isLoggedin: data.reqCompleted});\n                  });\n      }\n\n      componentDidMount() {\n            this.checkLogin();\n            this.updateJobStats();\n            this.updateAuditStats();\n            this.updateAuditLogs();\n      }\n      render() {\n            const {classes} = this.props;\n            if (!this.state.isRegisterd) {\n                  return <Redirect to=\"/register\" />;\n            } else if (this.state.isRegisterd && !this.state.isLoggedin) {\n                  return <Redirect to=\"/login\" />;\n            } else {\n                  return (\n                        <div>\n                              <Grid container spacing={3}>\n                                    <Grid item lg={3} md={6} sm={12} xs={12}>\n                                          <Card className={classes.api}>\n                                                <CardContent>\n                                                      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                            Total Jobs fired today\n                                                      </Typography>\n                                                      <Typography variant=\"h3\" component=\"p\">\n                                                            {this.state.api}\n                                                      </Typography>\n                                                </CardContent>\n                                          </Card>\n                                    </Grid>\n                                    <Grid item lg={3} md={6} sm={12} xs={12}>\n                                          <Card className={classes.api}>\n                                                <CardContent>\n                                                      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                            Total Unique Job Endpoints accessed\n                                                      </Typography>\n                                                      <Typography variant=\"h3\" component=\"p\">\n                                                            {this.state.apicounts}\n                                                      </Typography>\n                                                </CardContent>\n                                          </Card>\n                                    </Grid>\n                                    <Grid item lg={3} md={6} sm={12} xs={12}>\n                                          <Card className={classes.api}>\n                                                <CardContent>\n                                                      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                            Unique Logins today\n                                                      </Typography>\n                                                      <Typography variant=\"h3\" component=\"p\">\n                                                            {this.state.loginscounts}\n                                                      </Typography>\n                                                </CardContent>\n                                          </Card>\n                                    </Grid>\n                                    <Grid item lg={3} md={6} sm={12} xs={12}>\n                                          <Card className={classes.api}>\n                                                <CardContent>\n                                                      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                            Active Users today\n                                                      </Typography>\n                                                      <Typography variant=\"h3\" component=\"p\">\n                                                            {this.state.usercounts}\n                                                      </Typography>\n                                                </CardContent>\n                                          </Card>\n                                    </Grid>\n                              </Grid>\n\n                              <Grid container spacing={3}>\n                                    {this.state.barData.length > '0' && (\n                                          <Grid item lg={6} md={12} sm={12} xs={12}>\n                                                <Card className={classes.chart}>\n                                                      <CardContent>\n                                                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                                  API Activity (today)\n                                                            </Typography>\n                                                            <ResponsiveContainer width=\"98%\" aspect={2}>\n                                                                  <BarChart\n                                                                        data={this.state.barData}\n                                                                        margin={{\n                                                                              top: 5,\n                                                                              right: 30,\n                                                                              left: 20,\n                                                                              bottom: 5\n                                                                        }}\n                                                                  >\n                                                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                        <XAxis dataKey=\"Hourminute\" />\n                                                                        <YAxis />\n                                                                        <Tooltip />\n                                                                        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                                                                  </BarChart>\n                                                            </ResponsiveContainer>\n                                                      </CardContent>\n                                                </Card>\n                                          </Grid>\n                                    )}\n                                    {this.state.radarData.length > '0' && (\n                                          <Grid item lg={6} md={12} sm={12} xs={12}>\n                                                <Card className={classes.chart}>\n                                                      <CardContent>\n                                                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                                                  Activity Distibution (today)\n                                                            </Typography>\n\n                                                            <ResponsiveContainer width=\"98%\" aspect={2}>\n                                                                  <RadarChart outerRadius={150} data={this.state.radarData}>\n                                                                        <PolarGrid />\n                                                                        <PolarAngleAxis dataKey=\"api\" />\n                                                                        <PolarRadiusAxis />\n                                                                        <Tooltip />\n                                                                        <Radar name=\"count\" dataKey=\"count\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n                                                                  </RadarChart>\n                                                            </ResponsiveContainer>\n                                                      </CardContent>\n                                                </Card>\n                                          </Grid>\n                                    )}\n                              </Grid>\n\n                              <Grid container spacing={3}>\n                                    <Grid item xs={12}>\n                                          <MaterialTable icons={this.tableIcons} title=\"Audit Logs\" columns={this.state.columns} data={this.state.tabledata} />\n                                    </Grid>\n                              </Grid>\n                        </div>\n                  );\n            }\n      }\n}\n\nexport default withStyles(useStyles, {withTheme: true})(Landing);\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n//import all the routes\nimport Login from './login/login';\nimport Register from './login/register';\nimport Pages from './pages';\nimport Landing from './landing/Landing';\n\nexport default class MainRouter extends Component {\n      render() {\n            return (\n                  <div>\n                        <Router>\n                              <div>\n                                    <Route exact path=\"/register\" component={Register}></Route>\n                                    <Route exact path=\"/login\" component={Login}></Route>\n                                    <Route exact path=\"/users\" component={Pages}></Route>\n                                    <Route exact path=\"/groups\" component={Pages}></Route>\n                                    <Route exact path=\"/user-mapping\" component={Pages}></Route>\n                                    <Route exact path=\"/api-browser\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/postgres\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/mysql\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/mssql\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/oracle\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/sqllite\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/maria\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/redis\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/kafka\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/shell\" component={Pages}></Route>\n                                    <Route exact path=\"/credentials/file\" component={Pages}></Route>\n                                    <Route exact path=\"/utils/sentiment\" component={Pages}></Route>\n                                    <Route exact path=\"/utils/fuzzy\" component={Pages}></Route>\n                                    <Route exact path=\"/utils/echo\" component={Pages}></Route>\n                                    <Route exact path=\"/script/jsscript\" component={Pages}></Route>\n                                    <Route exact path=\"/script/sshscript\" component={Pages}></Route>\n                                    <Route exact path=\"/script/shell\" component={Pages}></Route>\n                                    <Route exact path=\"/iot/redis\" component={Pages}></Route>\n                                    <Route exact path=\"/iot/kafka\" component={Pages}></Route>\n                                    <Route exact path=\"/db/postgres\" component={Pages}></Route>\n                                    <Route exact path=\"/db/mysql\" component={Pages}></Route>\n                                    <Route exact path=\"/db/mssql\" component={Pages}></Route>\n                                    <Route exact path=\"/db/oracle\" component={Pages}></Route>\n                                    <Route exact path=\"/db/sqllite\" component={Pages}></Route>\n                                    <Route exact path=\"/db/maria\" component={Pages}></Route>\n                                    <Route exact path=\"/file/sftp\" component={Pages}></Route>\n                                    <Route exact path=\"/chains\" component={Pages}></Route>\n                                    <Route exact path=\"/home\" component={Landing}></Route>\n                                    <Route exact path=\"/\" component={Landing}></Route>\n                              </div>\n                        </Router>\n                  </div>\n            );\n      }\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Link from '@material-ui/core/Link';\nimport Button from '@material-ui/core/Button';\n\n//Import children\nimport MainRouter from './MainRouter';\n\n//ICONs\nimport PersonIcon from '@material-ui/icons/Person';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport StorageRoundedIcon from '@material-ui/icons/StorageRounded';\nimport OpenInBrowserRoundedIcon from '@material-ui/icons/OpenInBrowserRounded';\nimport VpnKeyRoundedIcon from '@material-ui/icons/VpnKeyRounded';\nimport FileCopyRoundedIcon from '@material-ui/icons/FileCopyRounded';\nimport CloudCircleOutlinedIcon from '@material-ui/icons/CloudCircleOutlined';\nimport EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\nimport AllInclusiveOutlinedIcon from '@material-ui/icons/AllInclusiveOutlined';\n\nconst iconlist = {\n      PersonIcon: PersonIcon,\n      GroupIcon: GroupIcon,\n      AccountTreeIcon: AccountTreeIcon,\n      StorageRoundedIcon: StorageRoundedIcon,\n      OpenInBrowserRoundedIcon: OpenInBrowserRoundedIcon,\n      VpnKeyRoundedIcon: VpnKeyRoundedIcon,\n      FileCopyRoundedIcon: FileCopyRoundedIcon,\n      CloudCircleOutlinedIcon: CloudCircleOutlinedIcon,\n      EmojiObjectsOutlinedIcon: EmojiObjectsOutlinedIcon,\n      DeveloperModeOutlinedIcon: AccountTreeIcon,\n      AllInclusiveOutlinedIcon: AllInclusiveOutlinedIcon\n};\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n      root: {\n            display: 'flex'\n      },\n      bottomAppBar: {\n            top: 'auto',\n            bottom: 0,\n            textAlign: 'center',\n            fontSize: '10px'\n      },\n      appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                  easing: theme.transitions.easing.sharp,\n                  duration: theme.transitions.duration.leavingScreen\n            })\n      },\n      appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                  easing: theme.transitions.easing.sharp,\n                  duration: theme.transitions.duration.enteringScreen\n            })\n      },\n      menuButton: {\n            marginRight: 36\n      },\n      hide: {\n            display: 'none'\n      },\n      drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n            height: '100vh'\n      },\n      drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                  easing: theme.transitions.easing.sharp,\n                  duration: theme.transitions.duration.enteringScreen\n            })\n      },\n      drawerClose: {\n            transition: theme.transitions.create('width', {\n                  easing: theme.transitions.easing.sharp,\n                  duration: theme.transitions.duration.leavingScreen\n            }),\n            overflowX: 'hidden',\n            width: 0,\n            [theme.breakpoints.up('sm')]: {\n                  width: 0\n            }\n      },\n      toolbar: {\n            color: '#fff',\n            backgroundColor: '#4caf50',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar\n      },\n      content: {\n            flexGrow: 1,\n            padding: theme.spacing(3)\n      },\n      title: {\n            flexGrow: 1\n      },\n      button: {\n            float: 'right'\n      },\n      card: {\n            display: 'inline-block',\n            margin: '10px',\n            marginTop: '75px',\n            width: '100%',\n            minHeight: '100%'\n      },\n      nested: {\n            paddingLeft: theme.spacing(4)\n      },\n      link: {\n            color: '#000'\n      }\n}));\n\nexport default function HeaderSidebarFooter() {\n      const classes = useStyles();\n      const theme = useTheme();\n      const [open, setOpen] = React.useState(false);\n      const [expandPanel, setExpandPanel] = React.useState({\n            Users: false\n      });\n      const defaultPanel = {\n            Login: {\n                  Login: {redirect: '/login'},\n                  OPTIONS: {\n                        ico: 'PersonIcon',\n                        RunAccess: true\n                  }\n            }\n      }\n      const [panelData, setPanelData] = React.useState(defaultPanel);\n\n      const handleDrawerOpen = () => {\n            setOpen(true);\n      };\n\n      const handleDrawerClose = () => {\n            setOpen(false);\n            var newExapndPanel = {};\n            Object.entries(expandPanel).forEach(([key, value]) => {\n                  newExapndPanel[key] = false;\n            });\n            setExpandPanel(newExapndPanel);\n            return null;\n      };\n\n      const handleClick = (key) => {\n            if (open === true) {\n                  setExpandPanel({...expandPanel, [key]: !expandPanel[key]});\n            }\n      };\n\n      const populatePanel = () => {\n            if (typeof panelData.Login !== 'undefined') {\n                  const apiUrl = '/api/v1/ui/resource-panels';\n                  fetch(apiUrl)\n                        .then((response) => response.json())\n                        .then((data) => {\n                              if (data.status) {\n                                    var expandablePanels = {};\n                                    Object.entries(data.Panels).forEach(([key, value]) => {\n                                          expandablePanels[key] = false;\n                                    });\n                                    setExpandPanel(expandablePanels);\n                                    setPanelData(data.Panels);\n                              }\n                        });\n            }\n      };\n      populatePanel();\n\n      return (\n            <div className={classes.root}>\n                  <CssBaseline />\n                  <AppBar\n                        position=\"fixed\"\n                        className={clsx(classes.appBar, {\n                              [classes.appBarShift]: open\n                        })}\n                  >\n                        <Toolbar>\n                              <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"open drawer\"\n                                    onClick={handleDrawerOpen}\n                                    edge=\"start\"\n                                    className={clsx(classes.menuButton, {\n                                          [classes.hide]: open\n                                    })}\n                              >\n                                    <MenuIcon />\n                              </IconButton>\n                              <Typography variant=\"h6\" noWrap className={classes.title}>\n                                    <Link href=\"/Home\" color=\"inherit\">   \n                                          Data Trucker\n                                    </Link>\n                              </Typography>                            \n                        </Toolbar>\n                  </AppBar>\n                  <Drawer\n                        color={theme.primary}\n                        variant=\"permanent\"\n                        className={clsx(classes.drawer, {\n                              [classes.drawerOpen]: open,\n                              [classes.drawerClose]: !open\n                        })}\n                        classes={{\n                              paper: clsx({\n                                    [classes.drawerOpen]: open,\n                                    [classes.drawerClose]: !open\n                              })\n                        }}\n                  >\n                        <div className={classes.toolbar}>\n                              Navigation\n                              <IconButton onClick={handleDrawerClose}>{theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n                        </div>\n                        <Divider />\n                        <List>\n                              {Object.entries(panelData).map(([key, value]) => {\n                                    const IcoComponent = iconlist[value.OPTIONS.ico];\n                                    return (\n                                          <React.Fragment key={key}>\n                                                <ListItem\n                                                      button\n                                                      key={key}\n                                                      onClick={(e) => {\n                                                            handleClick(key);\n                                                            handleDrawerOpen();\n                                                      }}\n                                                >\n                                                      <ListItemIcon>\n                                                            <IcoComponent />\n                                                      </ListItemIcon>\n                                                      <ListItemText primary={key} />\n                                                      {expandPanel[key] ? <ExpandLess /> : <ExpandMore />}\n                                                </ListItem>\n                                                <Collapse in={expandPanel[key]} timeout=\"auto\" unmountOnExit>\n                                                      <List component=\"div\" disablePadding>\n                                                            {Object.entries(value).map(([keyinner, valueinner]) => {\n                                                                  if (keyinner !== 'OPTIONS') {\n                                                                        return (\n                                                                              <a href={valueinner.redirect} className={classes.link} key={keyinner}>\n                                                                                    <ListItem button className={classes.nested}>\n                                                                                          <ListItemText primary={keyinner}></ListItemText>\n                                                                                    </ListItem>\n                                                                              </a>\n                                                                        );\n                                                                  } else {\n                                                                        return null;\n                                                                  }\n                                                            })}\n                                                      </List>\n                                                </Collapse>\n                                          </React.Fragment>\n                                    );\n                              })}\n                        </List>\n                        <Divider />\n                        <Button color=\"inherit\">\n                              <Link href=\"/Login\" color=\"inherit\">  \n                                 Logout\n                              </Link>\n                        </Button>\n                  </Drawer>\n                  <Card className={classes.card}>\n                        <CardContent>\n                              <main className={classes.content}>\n                                    <div>\n                                          <MainRouter />\n                                    </div>\n                              </main>\n                        </CardContent>\n                  </Card>\n            </div>\n      );\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\n\n//import\nimport HeaderSidebar from './HeaderSidebarFooter';\n\nexport default class Main extends Component {\n      render() {\n            return (\n                  <div>\n                        <HeaderSidebar />\n                  </div>\n            );\n      }\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React, {Component} from 'react';\n\nimport './App.css';\nimport Main from './components/views/main/Main';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {createTheme} from '@material-ui/core/styles';\n\nconst theme = createTheme({\n      palette: {\n            primary: {\n                  light: '#6fbf73',\n                  main: '#4caf50',\n                  dark: '#357a38',\n                  contrastText: '#fff'\n            },\n            secondary: {\n                  light: '#4aedc4',\n                  main: '#1de9b6',\n                  dark: '#1de9b6',\n                  contrastText: '#000'\n            }\n      }\n});\n\nclass App extends Component {\n      render() {\n            return (\n                  <div>\n                        <ThemeProvider theme={theme}>\n                              <div className=\"App\">\n                                    <Main />\n                              </div>\n                        </ThemeProvider>\n                  </div>\n            );\n      }\n}\n\nexport default App;\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n      window.location.hostname === 'localhost' ||\n            // [::1] is the IPv6 localhost address.\n            window.location.hostname === '[::1]' ||\n            // 127.0.0.0/8 are considered localhost for IPv4.\n            window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n      if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n            // The URL constructor is available in all browsers that support SW.\n            const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n            if (publicUrl.origin !== window.location.origin) {\n                  // Our service worker won't work if PUBLIC_URL is on a different origin\n                  // from what our page is served on. This might happen if a CDN is used to\n                  // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n                  return;\n            }\n\n            window.addEventListener('load', () => {\n                  const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n                  if (isLocalhost) {\n                        // This is running on localhost. Let's check if a service worker still exists or not.\n                        checkValidServiceWorker(swUrl, config);\n\n                        // Add some additional logging to localhost, pointing developers to the\n                        // service worker/PWA documentation.\n                        navigator.serviceWorker.ready.then(() => {\n                              console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n                        });\n                  } else {\n                        // Is not localhost. Just register service worker\n                        registerValidSW(swUrl, config);\n                  }\n            });\n      }\n}\n\nfunction registerValidSW(swUrl, config) {\n      navigator.serviceWorker\n            .register(swUrl)\n            .then((registration) => {\n                  registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        if (installingWorker == null) {\n                              return;\n                        }\n                        installingWorker.onstatechange = () => {\n                              if (installingWorker.state === 'installed') {\n                                    if (navigator.serviceWorker.controller) {\n                                          // At this point, the updated precached content has been fetched,\n                                          // but the previous service worker will still serve the older\n                                          // content until all client tabs are closed.\n                                          console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n                                          // Execute callback\n                                          if (config && config.onUpdate) {\n                                                config.onUpdate(registration);\n                                          }\n                                    } else {\n                                          // At this point, everything has been precached.\n                                          // It's the perfect time to display a\n                                          // \"Content is cached for offline use.\" message.\n                                          console.log('Content is cached for offline use.');\n\n                                          // Execute callback\n                                          if (config && config.onSuccess) {\n                                                config.onSuccess(registration);\n                                          }\n                                    }\n                              }\n                        };\n                  };\n            })\n            .catch((error) => {\n                  console.error('Error during service worker registration:', error);\n            });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n      // Check if the service worker can be found. If it can't reload the page.\n      fetch(swUrl, {\n            headers: {'Service-Worker': 'script'}\n      })\n            .then((response) => {\n                  // Ensure service worker exists, and that we really are getting a JS file.\n                  const contentType = response.headers.get('content-type');\n                  if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                        // No service worker found. Probably a different app. Reload the page.\n                        navigator.serviceWorker.ready.then((registration) => {\n                              registration.unregister().then(() => {\n                                    window.location.reload();\n                              });\n                        });\n                  } else {\n                        // Service worker found. Proceed as normal.\n                        registerValidSW(swUrl, config);\n                  }\n            })\n            .catch(() => {\n                  console.log('No internet connection found. App is running in offline mode.');\n            });\n}\n\nexport function unregister() {\n      if ('serviceWorker' in navigator) {\n            navigator.serviceWorker.ready\n                  .then((registration) => {\n                        registration.unregister();\n                  })\n                  .catch((error) => {\n                        console.error(error.message);\n                  });\n      }\n}\n","/*\n* Copyright 2021 Datatrucker.io Inc , Ontario , Canada\n* \n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n* \n*     http://www.apache.org/licenses/LICENSE-2.0\n* \n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/ \n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}